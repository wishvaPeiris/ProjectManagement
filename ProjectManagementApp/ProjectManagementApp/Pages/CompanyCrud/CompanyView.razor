@page "/company"
@attribute [Authorize(Policy = "AdminOnly")]
@using DataAccess.Model
@using ProjectManagementApp.Services
@using DataAccess;
@inject NavigationManager NavigationManager
@inject ICompanyService companyService
@inject IProjectService projectService
@inject IUser userService


<div class="container">
    <div class="heading">
        <h3>Registered Companies in ProjectManager</h3>
        <button class = "btn btn-dark" @onclick = "addNewCompany">Add companies</button>
    </div><br/>
    <div class="section1">
        <h3>List of Companies</h3>
        <table class="table">
          <thead>
            <tr>
              <th scope="col">No</th>
              <th scope="col">Company Name</th>
              <th scope="col">Created Date</th>
              <th scope="col">No.of Projects</th>
              <th scope="col">No.of Developers</th>
              <th>Manage Company</th>
            </tr>
          </thead>
          <tbody>
              @foreach (var item in listOfCompanies)
             {

                  <tr>
                      <th scope="row">@count</th>
                      <td>@item.CompanyName</td>
                      <td>@item.CreatedDate</td>
                      <td>@item.companyProjects.Count()</td>
                      <td>@item.companyDevs.Count()</td>
                      <td>
                          <button type="button" class="btn btn-success" id="@item.Id" data-bs-toggle="modal" data-bs-target="#EditCompany" @onclick = "@((args) =>openEditDialog(@item.Id,@item.CompanyName) )"><i class="material-icons">edit</i></button>
                          <button class="btn btn-danger" id="@item.Id" @onclick = "@((args) =>openDeletDialog(@item.Id) )"><i class="material-icons">delete</i></button>
                      </td>
                    </tr>
                     count++;
                }
          </tbody>
        </table>
    </div>
    @if (EditDialogOpen)
    {
       <EditCompany IntialCompanyId ="@companyId" companyName ="@intialCompName" OnClose = "@onEditDialogClose"></EditCompany>
    }

     @if (DeleteDialogOpen)
    {
        <DeleteCompany Title = "Delete the Company" Message = "Are you sure you want to delete the following company" CompanyId = "@companyId" OnClose = "@onDeleteDialogClose"></DeleteCompany>
    }
    
</div>


<style>
    .container{
        margin:0px;
        padding:0px;
    }
    .heading{
        width:100%;
        display: flex;
        justify-content: space-between;
        background-color: lightblue;
        padding:10px;
    }
</style>


@code {
    public int count = 1;
    public bool EditDialogOpen { get; set; }
    public bool DeleteDialogOpen { get; set; }
    public int companyId { get; set; }
    public string intialCompName { get; set; }
    List<Project> projectList = new List<Project>();
    List<Developer> userList = new List<Developer>();
    List<Company> listOfCompanies = new List<Company>();

    protected async override Task OnInitializedAsync()
    {
        listOfCompanies = companyService.listOfCompanies();

        foreach (var item in listOfCompanies)
        {
            projectList = projectService.listOfProjectsToCompanyIdAsync(item.Id);
            userList = userService.listOfDevelopersInCompany(item.Id);
            item.companyProjects = projectList;
            item.companyDevs = userList;

        }
    }

    private void onEditDialogClose(bool accepted)
    {
        EditDialogOpen = false;
        StateHasChanged();
    }

    private void onEditDialogOpen()
    {
        EditDialogOpen = true;
        StateHasChanged();
    }

    private void openEditDialog(int ButtonId,string compName)
    {
        intialCompName = compName;
        companyId = ButtonId;
        onEditDialogOpen();
    }

     private void onDeleteDialogClose(bool accepted)
    {
        DeleteDialogOpen = false;
        StateHasChanged();
    }

    private void onDeleteDialogOpen()
    {
        DeleteDialogOpen = true;
        StateHasChanged();
    }

    private void openDeletDialog(int ButtonId)
    {
        companyId = ButtonId;
        onDeleteDialogOpen();
    }

    private void addNewCompany()
    {
        NavigationManager.NavigateTo("/company/add");
    }
}
