@page "/"
@using DataAccess.Model
@using ProjectManagementApp.Services
@inject ICompanyService companyService
@inject IProjectService projectService
@inject IUser userService

@inject NavigationManager NavigationManager

<div class="container">
    <h1>Hello, welcome to Project Management App</h1><br/><br/>
    <div class = "home-section-2">
        <div class="card" style="width: 18rem;">
          <img src="./css/images/office.jpg" class="card-img-top" alt="Company">
          <div class="card-body">
            <h5 class="card-title">Companies Registered</h5>
            <p class="card-text">@listOfCompanies.Count()</p>
            <a class="btn btn-outline-success" @onclick = "@((args) =>companies())">View Companies</a>
          </div>
        </div>
         <div class="card" style="width: 18rem;">
          <img src="./css/images/project.png" class="card-img-top" alt="projects">
          <div class="card-body">
            <h5 class="card-title">Total Projects</h5>
            <p class="card-text">@listOfProjects.Count()</p>
            <a class="btn btn-outline-success" @onclick = "@((args) =>projects())">View Projects</a>
          </div>
        </div>
         <div class="card" style="width: 18rem;">
          <img src="./css/images/developer.jpg" class="card-img-top developer" alt="developer">
          <div class="card-body">
            <h5 class="card-title">Developers Registered</h5>
            <p class="card-text">@userList.Count()</p>
            <a class="btn btn-outline-success" @onclick = "@((args) =>users())">View Users</a>
          </div>
        </div>
    </div>
</div>

<style>
    .home-section-2 {
      display: flex;
      align-items: stretch;
    }
    .card{
        margin-right:20px;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    }
    .card-body{
        text-align:center;
        font-weight:bold;
    }
    .developer{
        height:160px;
    }
    a{
        color:"#fff";
    }
</style>


@code{
    [Parameter]
    public string userLoginEmail { get; set; }
    List<Company> listOfCompanies = new List<Company>();
    List<Project> listOfProjects = new List<Project>();
    List<Developer> userList = new List<Developer>();

    protected async override Task OnInitializedAsync()
    {
        listOfCompanies = companyService.listOfCompanies();
        listOfProjects = projectService.listOfProjects();
        userList = userService.listOfUsers();
    }

    public void users()
    {
        NavigationManager.NavigateTo("/user");
    }
    public void companies()
    {
        NavigationManager.NavigateTo("/company");
    }
    public void projects()
    {
        NavigationManager.NavigateTo("/project");
    }

   
}