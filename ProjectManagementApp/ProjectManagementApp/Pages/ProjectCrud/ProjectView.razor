@page "/project"
@using DataAccess.Model
@using ProjectManagementApp.Services
@inject ICompanyService companyService
@inject IProjectService projectService
@inject IUser userService

@inject NavigationManager NavigationManager

<div class="container">
    <div class="heading">
        <h3>Projects added in the project Manager</h3>
        <button class = "btn btn-dark" @onclick = "addNewProject">Add Projects</button>
    </div><br/>
    <div class="section1">
        <h3>List of all the projects</h3>
        <table class="table">
          <thead>
            <tr>
              <th scope="col">No</th>
              <th scope="col">Project Name</th>
              <th scope="col">Company Name</th>
              <th scope="col">No.of Developers</th>
            </tr>
          </thead>
          <tbody>
               @foreach (var item in projectList)
             {
                  <tr>
                      <th scope="row">@item.projectId</th>
                      <td>@item.projectName</td>
                      <td>@companyName[projectList.IndexOf(item)]</td>
                      <td>@item.developers.Count()</td>
                    </tr>
             }
          </tbody>
        </table>
    </div>
</div>

<style>
    .container{
        margin:0px;
        padding:0px;
    }
    .heading{
        width:100%;
        display: flex;
        justify-content: space-between;
        background-color: lightblue;
        padding:10px;
    }
</style>

@code {
    public int count = 0;
    List<Project> projectList = new List<Project>();
    List<Developer> userList = new List<Developer>();
    List<Company> listOfCompanies = new List<Company>();
    List<string> companyName = new List<string>();



    protected async override Task OnInitializedAsync()
    {
        listOfCompanies = companyService.listOfCompanies();
        projectList = projectService.listOfProjects();


        foreach (var item in projectList)
        {
            userList = userService.listOfDevelopersInProject(item.projectId);
            item.developers = userList;
            //getting the company name
            var myLinqQuery = from value in listOfCompanies where value.Id == item.companyProjectId select value.CompanyName.ToString();
            companyName.Add(myLinqQuery.FirstOrDefault());
        }
    }




    private void addNewProject()
    {
        NavigationManager.NavigateTo("/project/add");
    }
}








